<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQwAAAC8CAMAAAC672BgAAAABGdBTUEAALGPC/xhBQAAAa1QTFRFFBQU
        AAAAFBQTEhMU7MFi6b5fAAAQEhISFhYW5bta9+68FRQV9emz9/PF8MVn88hsEBEV+fbNAAAUAAALAAAN
        AAAG4sRo8+SqDREW99eBKighw5c3AAAZGBgV5rdcxZgxEA4V6Mp5KSMeFBUO4LpV8t6g7tqYAAkPNysZ
        FBIdFRIeKCkiGRMU47ZOEBYUGhUbAAAd7tWNHRsVPDYoTkksIxwTUEUle2YhjXQrNikgg2Moa1gjExgN
        UkIbmoU4EQsft5Ywp40udVkpr4szOTUZQSwhABQMFBYAABAbvpYlXUwc3Kg2x6I4km0mYEUpo383HBIL
        1qM40aUopYpT/952/96Q2qVDb1c4jHVOyrl4+/CtbmlU0c2nRzQZzagsABoK4aA1SUlD5eOyz8GNupo+
        4aZKsJxm8LtJeWlPpY5IHg8WSkItHQMc4cFNkHA8wJZOxqhb8sFxdms6LicrhXlCz69q6a9kvrVus5xP
        hmtDe3lSYFZHZFsytK6D689qg4Rsn52KwL6RwLabl5Fh3Nq98tSfiol8eXEw3dqnvI47g4NjraF9Uk08
        08F2ZEo7H0gOagAADTlJREFUeF7tnftbE0nWx7urmq5OCpKic6EhFxqKpAl2uifcBjUOM8L4omEugZUV
        HHxXcVGHxQ2O7s4os+6O7q7urPs3v6c7HQX0HfF55odNqj48kHQ/HR/7m3NOnVO3ViQSiUQikUgkEolE
        chooRahgEIVGx0JDKII/8BIdCw1ClNHpaSrFAFCBGXyGGFIMACHEZuc4lmKEOPPzTvRWdJA3+fEixFAJ
        4HoLZ1nQnggPRdQ8d15nUgtF8Vl98cIneh0sQ0Lq9uKnk1alHh0LTf0Pqc8uOnUfR8cig3zn4pLJfdeL
        TggLtbivL49+fklmW4rC/qfirYx+7PjRsdBgH5sLlz+ihehYaJirX2ksrxCZfELIKFiTq1+YSFarxFAI
        tl7mHGxQ2axC9q1/sfalAwV8dEZo9AvNr0xEpRpKxfXGc6uFKUSJFKPg6UvNK3kufQRA5rnGZ2YB2dGx
        0NgXmqNzHpcFGvJc6+tc47zpTSHhs89KvZL6qrGUZoqMGAqeci6uNSctWaABxJq83Dxn9lxLEvXi0g7t
        wzYICN9gjDu5BFzAaCW91HzpkKne6tAJpQjvGSkYfo9/1QzoCNLRhRGvgMyPG6MzBBvHL+96DEJCMY7y
        2kyCg0CQ8IDBhfABUvDrKxcaa+ccONNjYhCQwz6JdQTwEMyCVwWqVPgA4r5lrjZyeYvRXrMMkMMYAc5E
        BO9HxiPm5kbmAoL3I2d4GFBwhetfNdfOknrPhU/kuub6b4avlkr9A4OD8a3S1eGkpmmJRBJIVO/caazB
        T7PZ3Ni4sOKGyWbBPN9ofGxaPdihQ7g1+dtru5tDW1sDg/GhUm0sG4vF+gI5ErFqtdHcWGuuXm6sLl00
        oUyFD1BnvNG8nPd5+/O9BMRIbF9KZVLq9W/AMo6L0ReIsQZmsbCt5506osEIIjNzNxqf/y+a6rl4AWJU
        XDZlU+6BHIPx/rfFaDaWJnWHEcM1qAuf0BfWfnfO9A2vF/s9aTu5QJiqN2/1l4+7SaPa/N0ntgNta5ht
        EYbz0KrmTAzNbvvjvQk0m+rNt9yk2vhssVLp3DhG1lyu0dzu/Tk6RMGZ61sn3SQ3d6lS6VTpLv5oqdH4
        It+DwfMYBH4oVneOi1FsnDetArGii6gOreqo7olQrCIjc/fqsZhR3eCYtWehMO4yb7mx2tizWU/Hiwik
        WHMn3ORlutNoEKNSz99uNBYyihAzHDnD+uZxMS7mOzduTNU/Wqj+/kalwgsiuInn89TuUTeJ3dm2o/4O
        hSFnG5raPYdSIkK3J2I8fW34iGVM3JkL4wOBQh+cZKJRXTB9RI1eb00CEKLpu8PZieIbNyHhqIhBDIWn
        7lWrt+1Oh1fPg4jiPAEx3sSMDSdsSsAylPQVSMHmnW9FmbqFELH2hhNHLGND9wNLoITiP+xX9++nPF+U
        6Z4gBps5EjNi1dtm2JgUbEP/435xw2MVLyjWRADiARsZzhYn2mIki9XlShgjPJR+oFWr2ysnOox7maNi
        aGAZ2j/z9bA1qVyanCjeuW+KYhUBx8QALVp6vcCCrj6qt4p9q2lLHLs44SbJ5MG4xXweLEnUP9GK+2dt
        RaS58vDFH40ZD9LBSeZNObOJmHZfFSPZ6nBcjO8/Cr0C+5f8icSfJjKGj4Vykzdi9CWyBS8cGeBc3030
        7X9+ifV2T99JjlpG8jAP2TmcZKnDpJZ4mPd4MBorDq/FmCgm7qXgiPuEet8ltWJLrUTXCMNrMYp9LRJY
        gc+5p7cSB4mztlAuEvBGjP29sAOc8in9YTKRvK/XKyK5SMBrMbT7emgJyFtcziaTrXS9gkQUY3w4W421
        8u1FVthXHyWS2W1HEdNNxof/8qeJSccOxSCZdchEr2VE6AA+SeQm2nndgiwccGYgEW1lDJEKtA6RGPdM
        1M6vsJo9SGZnbEGXk5BAjG89ihgkGEi/B07yIOP7onT1HYMo+Lvf/Dbs9yTIduaTWvJ7FRJREWNGIMbZ
        P6cjO7C9Ay2ZpBi06IydiAXB43UWzkAwWGZd05LzeWQIqoVCDBsCBkUeZfphQkus64RhMcPnazDn1vhE
        QsuqhAkZL46AqWulvy9qyVkTC9Wh8y5QwTZ/2C8m76Xqi8IvQcPuynKxb6KoY/K18LtNcZZuaZq2p0fH
        QuOa97U+bV1qEaDP9hW1Vl5uKaRAvpluxbS+PSccgBca/LWl3p+IaT9kFCM6JS6EO3v7B9ofVcg7BU3D
        34AsNRarxs5k4L3wYnD9XrVv4lAXPb1QXIzcxdk7seq6Lnfd4lCfOcVqsThnR2IQcYMoc239XmxCm11h
        Rli3GwJHDc9dmdeyd9ZNBeGwQ7w9C1Q8AhvgbLoYq7YchhBGCP6qj8XsziAKISh/L1Hc33YCARBSDPPJ
        jirqVuJG/jCZ3X+YDlesYsOznL+/UgXt9DPY+Fiir5WxeLDwiCKs/ji0mRZy3xTPtdTdv2jaWU8JB9CQ
        l76+VdoMpqycFoRcz0VuD9iShfS7w2OJH9TARyCaEms8PlTaVD+gpwtzilcsP5z81N1Qa3wse/B9Ovxa
        CVGY+k1/IMbpAyil3Jv7croX2h+e2Rwey057oVuAZahPB0AMCKCnvjfEK86Vje32GFT3ghhF6QdXx4YP
        0+GwKkUodXOwH9xkJ3P6HBShqdQXq8vdPkOS+661XB4b203ZPChGMCKZ5wNxsIydzOnvDFW4+XJ10q53
        t59gxILVva9cCxWCfk9E1L8OhmKU1Q+wDEwWV3OTdpfvGGB46uNarXaYrnM77ATOPBnsiHH6dhJR58vV
        3FyXi0GR9125VnuWqiBKPQQtCXo+EInxATEDM30hB2J0edPqqX8r1zb1SrBogHLK1L8ORJZRcj9ADOq8
        zI3Wu3tmCzGCzRHKM1aYUhCDZa4PxCMxtsY/IGZYk6u5XL2bWxOiGHh6q1R6rONCIAYlFr/V3xHj6r/D
        EvZUoDR4Sc6zu3i/KijdwUlKP6q+G25BRgrqT/1xCBltMa47p46guDL6EsRgXSwG91JQkA2pnaFEDj4T
        BzFCyxgqPwuGDN4PpcS3r2zkcp/a7PSO9d8GwemReGlrNt35Oq3prXhgGaEY5dpOWLi9F6bQClsavZ27
        bXdzbQIF2Vb/syidgC9V3SkNvbaMUq3snmr0GSOkX2mO5nLdvV+q+jTe/0LtbMdG0teGhvpfW0apfHU2
        XLX3Xrg1BwEDxAg6UKNzXQVFnJGbA/39N6MnSBIXp3dLx8XYVTlcFl7//8ANHzFPXwgMI7eko1OZ0n8d
        FBFb/SY+8C8oQEI3gXtKgZcMvYkZkJju2Yz94hJOShBj+fO/z3W1GAhR9enA1k+BFqFlINubKZ0QY/jP
        5nuSSh9x29keBUCMr0zUnbPAELJnBgdujTAcbtoXiKE+LR8VAwJobexB5pdvj9WpufxpR4x8Ny5BgIYD
        IfWngYHrajBRnhQYBdfnO7XjMaNWG8vu6TbiQQH3NoxhqGb00C7aYujtfTK7DEKw+o/BgZ9UFo4GMIXX
        vcyzMljGCTHGsvMO+9Z9p3V43DUumefWul0MKKzODA4+z9D2FmSMe5XM3XINYsZJMRLZHzIrXnvT3BNQ
        z9M/X2pebnbEWDC7cTIDMQxwksGbGRwFT76o3q3V/v4ONzmI7d+eTGWwcdxTkIItU7/wWWPtxkaoRVsM
        2n1iUAgYTwcG/6FiRFgwNIDVkd2xWi2wjCCAdjp34EwWmNhvPfhazaRTkFIxxmxO0no+pW4vrDaaN0ZH
        37jJgoPC4rerMLg1HQSM8D8e7DCtXksmx8Zq5XI5ak3icajT2m7SVywW+/a1R+sPD+cn5zxenz47f/6f
        S7erN8LthZttJwnFOJfyu684QeAk8cGRaLkqMVJ72YMxECOMGVGlBpZRAi3GshNALDZR1RJ32hstJ6p9
        1epGqANw+XIkBnDO6cLtdA31OrSqmU66SFZa2dajV0C5/OLFi1vPnz+/devFi3L51atHjx61Wq1iMfgt
        HhSzWXgpxlYDRnOjgQ653MvXHF5yu2sdQvBEJ0uNx39WcTgyEICn/ULBKPwCvEApvLhuwTAMuNTw4XLD
        oIbBC8ET8hFFcOB7Xda0FqDgVn/cen5sTCTYeP7XIPrnugZa8PTrW/0zdpB5ReeEhXGLv4j/S7XfmWEL
        BvVSP2/9TbWDwlx4OajzpH+IVH65y0YICEEWejH0xCZSDIiYhvrz1jPVLgi3V8pbQIzI/Lu0o2Juy4VG
        3PecnaEzXT7V6FeCWOq1raBzKzoWGurslSBgSDECvNTm5hRn4m2u9BZ20G1R29ORItaehe8C8YJ1tvZY
        lw9YhXDBuK9u7mbe3c8tHvnHtbrPhV+LByDqqbU9JxoaEBzK1d2Hp5uI0/uglflHqrSKNkR9pXfnCPmv
        jeHizPp/hHiy03vBCFmzz9SC9BIA8cr0wxST/TkByNcPZyxsyJABMDaz53ioPRVDdBCfIdJFOhiFaN6W
        JHyctxSjA8a99thyiUQikUgkEolEIpFIJBKJRCKRSCQSiaSNovwf4Z7oCOKMolsAAAAASUVORK5CYII=
</value>
  </data>
</root>